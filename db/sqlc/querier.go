// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package db

import (
	"context"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	AddEventTag(ctx context.Context, arg AddEventTagParams) (EventTag, error)
	AddUserTags(ctx context.Context, arg AddUserTagsParams) error
	CreateEvent(ctx context.Context, arg CreateEventParams) (CreateEventRow, error)
	CreateImage(ctx context.Context, arg CreateImageParams) (Image, error)
	CreatePrivateEventToken(ctx context.Context, arg CreatePrivateEventTokenParams) error
	CreateSession(ctx context.Context, arg CreateSessionParams) error
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	DeleteAllEventTags(ctx context.Context, eventID int32) error
	DeleteEvent(ctx context.Context, id int32) error
	DeleteImage(ctx context.Context, id uuid.UUID) error
	DeleteUser(ctx context.Context, id int32) error
	DeleteUserTags(ctx context.Context, userID int32) error
	GetAllUserTags(ctx context.Context, id int32) ([]Tag, error)
	GetEvent(ctx context.Context, arg GetEventParams) (GetEventRow, error)
	GetGuestRecommendedEvents(ctx context.Context, arg GetGuestRecommendedEventsParams) ([]GetGuestRecommendedEventsRow, error)
	GetImageByEventID(ctx context.Context, id int32) (Image, error)
	GetImageByUserID(ctx context.Context, id int32) (Image, error)
	GetLatestEvents(ctx context.Context) ([]GetLatestEventsRow, error)
	GetOwnedUserEvents(ctx context.Context, userID int32) ([]GetOwnedUserEventsRow, error)
	GetPastUserEvents(ctx context.Context, userID int32) ([]GetPastUserEventsRow, error)
	GetPopularEvents(ctx context.Context) ([]GetPopularEventsRow, error)
	GetPremiumEvents(ctx context.Context) ([]GetPremiumEventsRow, error)
	GetSession(ctx context.Context, argUuid uuid.UUID) (Session, error)
	GetTags(ctx context.Context) ([]Tag, error)
	GetUpcomingUserEvents(ctx context.Context, userID int32) ([]GetUpcomingUserEventsRow, error)
	GetUser(ctx context.Context, id int32) (User, error)
	GetUserByEmail(ctx context.Context, email string) (User, error)
	GetUserRecommendedEvents(ctx context.Context, arg GetUserRecommendedEventsParams) ([]GetUserRecommendedEventsRow, error)
	GetUserWithTags(ctx context.Context, id int32) (UserWithTagsView, error)
	IsParticipant(ctx context.Context, arg IsParticipantParams) (bool, error)
	ListAll(ctx context.Context, arg ListAllParams) ([]ListAllRow, error)
	ListEvents(ctx context.Context, arg ListEventsParams) ([]ListEventsRow, error)
	ListUsers(ctx context.Context, arg ListUsersParams) ([]User, error)
	SubscribeToEvent(ctx context.Context, arg SubscribeToEventParams) (pgtype.Bool, error)
	UnsubscribeFromEvent(ctx context.Context, arg UnsubscribeFromEventParams) error
	UpdateEvent(ctx context.Context, arg UpdateEventParams) error
	UpdatePassword(ctx context.Context, arg UpdatePasswordParams) error
	UpdateSession(ctx context.Context, arg UpdateSessionParams) error
	UpdateUser(ctx context.Context, arg UpdateUserParams) (User, error)
}

var _ Querier = (*Queries)(nil)
